# TODO:
make tab decal for pdf export
    ->paint tab clef
documentation opens in text editor???
save Tool values
    ->how is file history saved?
more intuitive tuner

## CHANGELOG:

22/07/2021
added default shortcut for tuner: "shift t"

19/07/2021
added save / save as option to tab folder menu

16/07/2021
lilypond export is reverted to 1.5.4 - in
TuxGuitar-lilypond/src/org/herac/tuxguitar/io/lilypond/LilypondOutputStream.java
due to false enharmonics when exporting from gp3

14/07/2021
display fret numbers in chord diagrams only if higher than 1

13/07/2021
transpose tool has new option "transpose selection".

12/07/2021
added bach bourree as template / startup file, location:
/home/ptero/tuxguitar/TuxGuitar/share/templates/template-default.tg

key names instead of number of sharps / flats for german language file in
/home/ptero/tuxguitar/TuxGuitar/share/lang/messages_de.properties

changed keys for note duration change near the cursor arrows.
increase : ','  decrease: '-'
/home/ptero/tuxguitar/TuxGuitar/dist/tuxguitar-shortcuts.xml
i guess increase makes the notes smaller. 

01/07/2021
/home/ptero/tuxguitar/TuxGuitar/share/lang/messages_de.properties
/home/ptero/tuxguitar/TuxGuitar/share/lang/messages_en.properties
    -> added :
tools.transpose.apply-to-selection


yin pitch detection:
TuxGuitar-tuner/src/org/herac/tuxguitar/app/tools/custom/tuner/TGTuner.java
...opens dataline with settings and reads audio
doFFT does actual processing
computeFFT seems unused
TGTuner owns FFT, which has the method computeFFT
when dataline is opened, fft is initialized before
->so we should create a yin class, and instantiate with settings ...?!?
TGTuner owns settings object
do they normalize audio data????




existing tuner:
TuxGuitar-tuner/src/org/herac/tuxguitar/app/tools/custom/tuner/TGTuner.java
...fires frequency to main window, is a
TuxGuitar-tuner/src/org/herac/tuxguitar/app/tools/custom/tuner/TGTunerListener.java
TuxGuitar-tuner/src/org/herac/tuxguitar/app/tools/custom/tuner/TGTunerDialog.java
implements TGTunerListener.
here it splits in rough and fine widget...
the rough widget shows frequency on a tone axis
fine widget represents area around specific tone 
with a needle like pointer
tuner when 'idle' shows 119 hz, would be better to show nothing.
tone recognition is ok, but no auto fine widget.
fine widget only works when string is selected.
    -> the needle doesn't display anything, unless you select a string to tune.
nice to have: auto string selection !
